{"version":3,"file":"module-plugin.esm.js","sources":["../src/utils.js","../src/module.js","../src/module-manager.js","../src/index.js"],"sourcesContent":["export function extractNodes(nodes, map) {\n    const names = Array.from(map.keys());\n    \n    return Object.keys(nodes)\n        .filter(k => names.includes(nodes[k].name))\n        .map(k => nodes[k])\n        .sort((n1, n2) => n1.position[1] > n2.position[1]);\n}\n\nimport { Input, Output } from 'rete';\n\nexport function removeIO(node, editor) {\n    node.getConnections().forEach(c => editor.removeConnection(c));\n    Array.from(node.inputs.values()).forEach(input => node.removeInput(input));\n    Array.from(node.outputs.values()).forEach(output => node.removeOutput(output));\n}\n\nexport function addIO(node, inputs, outputs) {\n    const uniqueInputsCount = new Set(inputs.map(i => i.name)).size;\n    const uniqueOutputsCount = new Set(outputs.map(i => i.name)).size;\n\n    if (uniqueInputsCount !== inputs.length)\n        throw `Module ${node.data.module} has duplicate inputs`;\n    if (uniqueOutputsCount !== outputs.length)\n        throw `Module ${node.data.module} has duplicate outputs`;\n\n    inputs.forEach(i => node.addInput(new Input(i.name, i.name, i.socket)))\n    outputs.forEach(o => node.addOutput(new Output(o.name, o.name, o.socket)));\n}\n","export class Module {\n    \n    constructor() {\n        this.inputs = {};\n        this.outputs = {};\n    }\n    \n    read(inputs) {\n        this.inputs = inputs;\n    }\n    \n    write(outputs) {\n        Object.keys(this.outputs).map(key => {\n            outputs[key] = this.outputs[key];\n        });\n    }\n\n    getInput(key) {\n        return this.inputs[key];\n    }\n\n    setOutput(key, value) {\n        this.outputs[key] = value;\n    }\n}\n    ","import { Module } from './module';\nimport { extractNodes } from './utils';\n\nexport class ModuleManager {\n\n    constructor(modules) {\n        this.engine = null;\n        this.modules = modules;\n        this.inputs = new Map();\n        this.outputs = new Map();\n    }\n\n    getInputs(data) {\n        return extractNodes(data.nodes, this.inputs)\n            .map(node => ({ name: node.data.name, socket: this.socketFactory(node, this.inputs.get(node.name)) }));\n    }\n\n    getOutputs(data) {\n        return extractNodes(data.nodes, this.outputs)\n            .map(node => ({ name: node.data.name, socket: this.socketFactory(node, this.outputs.get(node.name)) }));\n    }\n\n    socketFactory(node, socket) {\n        socket = typeof socket === \"function\" ? socket(node) : socket;\n\n        if (!socket) throw new Error(`Socket not found for node with id = ${node.id} in the module`);\n\n        return socket;\n    }\n\n    registerInput(name, socket) {\n        this.inputs.set(name, socket)\n    }\n\n    registerOutput(name, socket) {\n        this.outputs.set(name, socket)\n    }\n\n    async workerModule(node, inputs, outputs, args) {\n        if (!node.data.module) return;\n        if (!this.modules[node.data.module]) return;\n\n        const data = this.modules[node.data.module].data;\n        const module = new Module();\n        const engine = this.engine.clone();\n\n        module.read(inputs);\n        await engine.process(data, null, Object.assign({}, args, { module, silent: true }));\n        module.write(outputs);\n    }\n    \n    workerInputs(node, inputs, outputs, { module } = {}) {\n        if (!module) return;\n            \n        outputs['output'] = (module.getInput(node.data.name) || [])[0];\n    }\n        \n    workerOutputs(node, inputs, outputs, { module } = {}) {\n        if (!module) return;\n\n        module.setOutput(node.data.name, inputs['input'][0]);\n    }\n        \n    setEngine(engine) {\n        this.engine = engine;\n    }\n}","import { addIO, removeIO } from './utils';\nimport { ModuleManager } from './module-manager';\n\nfunction install(context, { engine, modules }) {\n    const moduleManager = new ModuleManager(modules);\n\n    moduleManager.setEngine(engine);\n        \n    context.on('componentregister', component => {\n        if (!component.module) return;\n\n        // socket - Rete.Socket instance or function that returns a socket instance\n        const { nodeType, socket } = component.module;\n        const name = component.name;\n\n        switch (nodeType) {\n        case 'input':\n            let inputsWorker = component.worker;\n\n            moduleManager.registerInput(name, socket);\n\n            component.worker = (...args) => {\n                moduleManager.workerInputs.apply(moduleManager, args);\n                if (inputsWorker) inputsWorker.apply(component, args);\n            }\n            break;\n        case 'module':\n            const builder = component.builder;\n\n            if (builder) {\n                component.updateModuleSockets = (node) => {\n                    removeIO(node, context);\n\n                    if (!node.data.module || !modules[node.data.module]) return;\n\n                    const data = modules[node.data.module].data;\n                    const inputs = moduleManager.getInputs(data);\n                    const outputs = moduleManager.getOutputs(data);\n                    \n                    try {\n                        addIO(node, inputs, outputs)\n                    } catch (e) {\n                        return context.trigger('warn', e);\n                    }\n                }\n\n                component.builder = async (node) => {\n                    component.updateModuleSockets(node);\n                    await builder.call(component, node);\n                }\n            }\n\n            const moduleWorker = component.worker;\n\n            component.worker = async (...args) => {\n                await moduleManager.workerModule.apply(moduleManager, args);\n                if (moduleWorker) moduleWorker.apply(component, args);\n            };\n            break;\n        case 'output':\n            let outputsWorker = component.worker;\n\n            moduleManager.registerOutput(name, socket);\n\n            component.worker = (...args) => {\n                if (outputsWorker) outputsWorker.apply(component, args);\n                moduleManager.workerOutputs.apply(moduleManager, args);\n            }\n            break;\n        default: break;\n        }\n    });\n}\n\nexport default {\n    install\n}"],"names":["extractNodes","nodes","map","names","Array","from","keys","Object","filter","k","includes","name","sort","n1","n2","position","removeIO","node","editor","getConnections","forEach","c","removeConnection","inputs","values","input","removeInput","outputs","output","removeOutput","addIO","uniqueInputsCount","Set","i","size","uniqueOutputsCount","length","data","module","addInput","Input","socket","o","addOutput","Output","Module","key","value","ModuleManager","modules","engine","Map","socketFactory","get","Error","id","set","args","clone","read","process","assign","silent","write","getInput","setOutput","install","context","moduleManager","setEngine","on","component","nodeType","inputsWorker","worker","registerInput","workerInputs","apply","builder","updateModuleSockets","getInputs","getOutputs","e","trigger","call","moduleWorker","workerModule","outputsWorker","registerOutput","workerOutputs"],"mappings":"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"}