{"version":3,"file":"module-plugin.min.js","sources":["../src/utils.js","../src/module.js","../src/module-manager.js","../src/index.js"],"sourcesContent":["export function extractNodes(nodes, map) {\n    const names = Array.from(map.keys());\n    \n    return Object.keys(nodes)\n        .filter(k => names.includes(nodes[k].name))\n        .map(k => nodes[k])\n        .sort((n1, n2) => n1.position[1] > n2.position[1]);\n}\n\nimport { Input, Output } from 'rete';\n\nexport function removeIO(node, editor) {\n    node.getConnections().forEach(c => editor.removeConnection(c));\n    Array.from(node.inputs.values()).forEach(input => node.removeInput(input));\n    Array.from(node.outputs.values()).forEach(output => node.removeOutput(output));\n}\n\nexport function addIO(node, inputs, outputs) {\n    const uniqueInputsCount = new Set(inputs.map(i => i.name)).size;\n    const uniqueOutputsCount = new Set(outputs.map(i => i.name)).size;\n\n    if (uniqueInputsCount !== inputs.length)\n        throw `Module ${node.data.module} has duplicate inputs`;\n    if (uniqueOutputsCount !== outputs.length)\n        throw `Module ${node.data.module} has duplicate outputs`;\n\n    inputs.forEach(i => node.addInput(new Input(i.name, i.name, i.socket)))\n    outputs.forEach(o => node.addOutput(new Output(o.name, o.name, o.socket)));\n}\n","export class Module {\n    \n    constructor() {\n        this.inputs = {};\n        this.outputs = {};\n    }\n    \n    read(inputs) {\n        this.inputs = inputs;\n    }\n    \n    write(outputs) {\n        Object.keys(this.outputs).map(key => {\n            outputs[key] = this.outputs[key];\n        });\n    }\n\n    getInput(key) {\n        return this.inputs[key];\n    }\n\n    setOutput(key, value) {\n        this.outputs[key] = value;\n    }\n}\n    ","import { Module } from './module';\nimport { extractNodes } from './utils';\n\nexport class ModuleManager {\n\n    constructor(modules) {\n        this.engine = null;\n        this.modules = modules;\n        this.inputs = new Map();\n        this.outputs = new Map();\n    }\n\n    getInputs(data) {\n        return extractNodes(data.nodes, this.inputs)\n            .map(node => ({ name: node.data.name, socket: this.socketFactory(node, this.inputs.get(node.name)) }));\n    }\n\n    getOutputs(data) {\n        return extractNodes(data.nodes, this.outputs)\n            .map(node => ({ name: node.data.name, socket: this.socketFactory(node, this.outputs.get(node.name)) }));\n    }\n\n    socketFactory(node, socket) {\n        socket = typeof socket === \"function\" ? socket(node) : socket;\n\n        if (!socket) throw new Error(`Socket not found for node with id = ${node.id} in the module`);\n\n        return socket;\n    }\n\n    registerInput(name, socket) {\n        this.inputs.set(name, socket)\n    }\n\n    registerOutput(name, socket) {\n        this.outputs.set(name, socket)\n    }\n\n    async workerModule(node, inputs, outputs, args) {\n        if (!node.data.module) return;\n        if (!this.modules[node.data.module]) return;\n\n        const data = this.modules[node.data.module].data;\n        const module = new Module();\n        const engine = this.engine.clone();\n\n        module.read(inputs);\n        await engine.process(data, null, Object.assign({}, args, { module, silent: true }));\n        module.write(outputs);\n    }\n    \n    workerInputs(node, inputs, outputs, { module } = {}) {\n        if (!module) return;\n            \n        outputs['output'] = (module.getInput(node.data.name) || [])[0];\n    }\n        \n    workerOutputs(node, inputs, outputs, { module } = {}) {\n        if (!module) return;\n\n        module.setOutput(node.data.name, inputs['input'][0]);\n    }\n        \n    setEngine(engine) {\n        this.engine = engine;\n    }\n}","import { addIO, removeIO } from './utils';\nimport { ModuleManager } from './module-manager';\n\nfunction install(context, { engine, modules }) {\n    const moduleManager = new ModuleManager(modules);\n\n    moduleManager.setEngine(engine);\n        \n    context.on('componentregister', component => {\n        if (!component.module) return;\n\n        // socket - Rete.Socket instance or function that returns a socket instance\n        const { nodeType, socket } = component.module;\n        const name = component.name;\n\n        switch (nodeType) {\n        case 'input':\n            let inputsWorker = component.worker;\n\n            moduleManager.registerInput(name, socket);\n\n            component.worker = (...args) => {\n                moduleManager.workerInputs.apply(moduleManager, args);\n                if (inputsWorker) inputsWorker.apply(component, args);\n            }\n            break;\n        case 'module':\n            const builder = component.builder;\n\n            if (builder) {\n                component.updateModuleSockets = (node) => {\n                    removeIO(node, context);\n\n                    if (!node.data.module || !modules[node.data.module]) return;\n\n                    const data = modules[node.data.module].data;\n                    const inputs = moduleManager.getInputs(data);\n                    const outputs = moduleManager.getOutputs(data);\n                    \n                    try {\n                        addIO(node, inputs, outputs)\n                    } catch (e) {\n                        return context.trigger('warn', e);\n                    }\n                }\n\n                component.builder = async (node) => {\n                    component.updateModuleSockets(node);\n                    await builder.call(component, node);\n                }\n            }\n\n            const moduleWorker = component.worker;\n\n            component.worker = async (...args) => {\n                await moduleManager.workerModule.apply(moduleManager, args);\n                if (moduleWorker) moduleWorker.apply(component, args);\n            };\n            break;\n        case 'output':\n            let outputsWorker = component.worker;\n\n            moduleManager.registerOutput(name, socket);\n\n            component.worker = (...args) => {\n                if (outputsWorker) outputsWorker.apply(component, args);\n                moduleManager.workerOutputs.apply(moduleManager, args);\n            }\n            break;\n        default: break;\n        }\n    });\n}\n\nexport default {\n    install\n}"],"names":["extractNodes","nodes","map","names","Array","from","keys","Object","filter","k","includes","name","sort","n1","n2","position","Module","inputs","outputs","this","key","_this","value","ModuleManager","modules","engine","Map","data","node","socket","socketFactory","get","_this2","Error","id","set","args","module","clone","read","process","assign","silent","write","getInput","setOutput","install","context","moduleManager","setEngine","on","component","nodeType","inputsWorker","worker","registerInput","workerInputs","apply","builder","updateModuleSockets","editor","getConnections","forEach","c","removeConnection","values","input","removeInput","output","removeOutput","getInputs","getOutputs","uniqueInputsCount","Set","i","size","uniqueOutputsCount","length","addInput","Input","o","addOutput","Output","addIO","e","trigger","call","moduleWorker","workerModule","outputsWorker","registerOutput","workerOutputs"],"mappings":";;;;;k/NAAO,SAASA,EAAaC,EAAOC,OAC1BC,EAAQC,MAAMC,KAAKH,EAAII,eAEtBC,OAAOD,KAAKL,GACdO,OAAO,SAAAC,UAAKN,EAAMO,SAAST,EAAMQ,GAAGE,QACpCT,IAAI,SAAAO,UAAKR,EAAMQ,KACfG,KAAK,SAACC,EAAIC,UAAOD,EAAGE,SAAS,GAAKD,EAAGC,SAAS,SCN1CC,EAAb,uCAGaC,OAAS,QACTC,QAAU,0CAGdD,QACIA,OAASA,gCAGZC,cACFX,OAAOD,KAAKa,KAAKD,SAAShB,IAAI,SAAAkB,GAC1BF,EAAQE,GAAOC,EAAKH,QAAQE,sCAI3BA,UACED,KAAKF,OAAOG,qCAGbA,EAAKE,QACNJ,QAAQE,GAAOE,QAtB5B,GCGaC,EAAb,sBAEgBC,kBACHC,OAAS,UACTD,QAAUA,OACVP,OAAS,IAAIS,SACbR,QAAU,IAAIQ,sDAGbC,qBACC3B,EAAa2B,EAAK1B,MAAOkB,KAAKF,QAChCf,IAAI,SAAA0B,SAAS,CAAEjB,KAAMiB,EAAKD,KAAKhB,KAAMkB,OAAQR,EAAKS,cAAcF,EAAMP,EAAKJ,OAAOc,IAAIH,EAAKjB,6CAGzFgB,qBACA3B,EAAa2B,EAAK1B,MAAOkB,KAAKD,SAChChB,IAAI,SAAA0B,SAAS,CAAEjB,KAAMiB,EAAKD,KAAKhB,KAAMkB,OAAQG,EAAKF,cAAcF,EAAMI,EAAKd,QAAQa,IAAIH,EAAKjB,gDAGvFiB,EAAMC,QAChBA,EAA2B,mBAAXA,EAAwBA,EAAOD,GAAQC,GAE1C,MAAM,IAAII,oDAA6CL,EAAKM,6BAElEL,wCAGGlB,EAAMkB,QACXZ,OAAOkB,IAAIxB,EAAMkB,0CAGXlB,EAAMkB,QACZX,QAAQiB,IAAIxB,EAAMkB,uEAGRD,EAAMX,EAAQC,EAASkB,+FACjCR,EAAKD,KAAKU,2DACVlB,KAAKK,QAAQI,EAAKD,KAAKU,gEAEtBV,EAAOR,KAAKK,QAAQI,EAAKD,KAAKU,QAAQV,KACtCU,EAAS,IAAIrB,EACbS,EAASN,KAAKM,OAAOa,QAE3BD,EAAOE,KAAKtB,aACNQ,EAAOe,QAAQb,EAAM,KAAMpB,OAAOkC,OAAO,GAAIL,EAAM,CAAEC,OAAAA,EAAQK,QAAQ,aAC3EL,EAAOM,MAAMzB,yIAGJU,EAAMX,EAAQC,OAAWmB,0DAAW,IAAXA,OAC7BA,IAELnB,EAAO,QAAcmB,EAAOO,SAAShB,EAAKD,KAAKhB,OAAS,IAAI,0CAGlDiB,EAAMX,EAAQC,OAAWmB,0DAAW,IAAXA,OAC9BA,GAELA,EAAOQ,UAAUjB,EAAKD,KAAKhB,KAAMM,EAAM,MAAU,sCAG3CQ,QACDA,OAASA,QA7DtB,SCuEe,CACXqB,QAxEJ,SAAiBC,SAAWtB,IAAAA,OAAQD,IAAAA,QAC1BwB,EAAgB,IAAIzB,EAAcC,GAExCwB,EAAcC,UAAUxB,GAExBsB,EAAQG,GAAG,oBAAqB,SAAAC,MACvBA,EAAUd,cAGcc,EAAUd,OAA/Be,IAAAA,SAAUvB,IAAAA,OACZlB,EAAOwC,EAAUxC,YAEfyC,OACH,YACGC,EAAeF,EAAUG,OAE7BN,EAAcO,cAAc5C,EAAMkB,GAElCsB,EAAUG,OAAS,sCAAIlB,2BAAAA,kBACnBY,EAAcQ,aAAaC,MAAMT,EAAeZ,GAC5CiB,GAAcA,EAAaI,MAAMN,EAAWf,cAGnD,aACKsB,EAAUP,EAAUO,QAEtBA,IACAP,EAAUQ,oBAAsB,SAAC/B,GHnB1C,IAAkBA,EAAMgC,KAAAA,EGoBIb,GHpBVnB,EGoBIA,GHnBpBiC,iBAAiBC,QAAQ,SAAAC,UAAKH,EAAOI,iBAAiBD,KAC3D3D,MAAMC,KAAKuB,EAAKX,OAAOgD,UAAUH,QAAQ,SAAAI,UAAStC,EAAKuC,YAAYD,KACnE9D,MAAMC,KAAKuB,EAAKV,QAAQ+C,UAAUH,QAAQ,SAAAM,UAAUxC,EAAKyC,aAAaD,KGmBjDxC,EAAKD,KAAKU,QAAWb,EAAQI,EAAKD,KAAKU,aAEtCV,EAAOH,EAAQI,EAAKD,KAAKU,QAAQV,KACjCV,EAAS+B,EAAcsB,UAAU3C,GACjCT,EAAU8B,EAAcuB,WAAW5C,QHpBtD,SAAeC,EAAMX,EAAQC,OAC1BsD,EAAoB,IAAIC,IAAIxD,EAAOf,IAAI,SAAAwE,UAAKA,EAAE/D,QAAOgE,KACrDC,EAAqB,IAAIH,IAAIvD,EAAQhB,IAAI,SAAAwE,UAAKA,EAAE/D,QAAOgE,QAEzDH,IAAsBvD,EAAO4D,OAC7B,sBAAgBjD,EAAKD,KAAKU,mCAC1BuC,IAAuB1D,EAAQ2D,OAC/B,sBAAgBjD,EAAKD,KAAKU,iCAE9BpB,EAAO6C,QAAQ,SAAAY,UAAK9C,EAAKkD,SAAS,IAAIC,QAAML,EAAE/D,KAAM+D,EAAE/D,KAAM+D,EAAE7C,WAC9DX,EAAQ4C,QAAQ,SAAAkB,UAAKpD,EAAKqD,UAAU,IAAIC,SAAOF,EAAErE,KAAMqE,EAAErE,KAAMqE,EAAEnD,WGa7CsD,CAAMvD,EAAMX,EAAQC,GACtB,MAAOkE,UACErC,EAAQsC,QAAQ,OAAQD,MAIvCjC,EAAUO,qCAAU,WAAO9B,yFACvBuB,EAAUQ,oBAAoB/B,YACxB8B,EAAQ4B,KAAKnC,EAAWvB,8FAIhC2D,EAAepC,EAAUG,OAE/BH,EAAUG,iCAAS,iIAAUlB,2BAAAA,0BACnBY,EAAcwC,aAAa/B,MAAMT,EAAeZ,UAClDmD,GAAcA,EAAa9B,MAAMN,EAAWf,sDAGnD,aACGqD,EAAgBtC,EAAUG,OAE9BN,EAAc0C,eAAe/E,EAAMkB,GAEnCsB,EAAUG,OAAS,sCAAIlB,2BAAAA,kBACfqD,GAAeA,EAAchC,MAAMN,EAAWf,GAClDY,EAAc2C,cAAclC,MAAMT,EAAeZ"}